/// <reference path="../references" />

@mixin layoutr-percentage-circle {
    .percentage-circle {
        position: relative;
        font-size: 80px;
        width: 1em;
        height: 1em;
        border-radius: 50%;
        background-color: $component-border-color;

        @each $color, $value in $theme-colors {
            &.theme-#{$color} {
                .pie,
                .fill {
                    border-color: $value;
                }

                > span {
                    color: $value;
                }
            }
        }

        .pie {
            position: absolute;
            border: $percentage-circle-width solid $percentage-circle-primary-color;
            width: 1em;
            height: 1em;
            clip: rect(0em, 0.5em, 1em, 0em);
            border-radius: 50%;
            @include transform(rotate(0deg));
        }

        > span {
            // centered value inside circle
            position: absolute;
            width: 100%;
            z-index: 1;
            left: 0;
            top: 0;
            width: 3.33em;
            line-height: 3.33em;
            font-size: 0.3em;
            font-weight: bold;
            color: $percentage-circle-primary-color;
            display: block;
            text-align: center;
            white-space: nowrap;
        }

        &:after {
            // background inside the circle
            position: absolute;
            top: $percentage-circle-width;
            left: $percentage-circle-width;
            display: block;
            content: '';
            background-color: $percentage-circle-bg-color;
            width: 1 - (2 * $percentage-circle-width);
            height: 1 - (2 * $percentage-circle-width);
            border-radius: 50%;
        }

        .slice {
            // the slice (mask)
            position: absolute;
            width: 1em;
            height: 1em;
            clip: rect(0em, 1em, 1em, 0.5em);
        }

        .bar,
        .fill {
            // circle to show the status
            @extend .pie;
        }

        @for $j from 51 through 100 {
            &.p#{$j} .slice {
                clip: rect(auto, auto, auto, auto);
            }

            &.p#{$j} .bar:after {
                @include transform(rotate(180deg));
            }

            &.p#{$j} .fill {
                @include transform(rotate(180deg));
            }
        }

        @for $j from 1 through 100 {
            // loop to rotate all 100 circles
            &.p#{$j} .bar {
                @include transform(rotate(#{360/100*$j}deg));
            }
        }
    }
}