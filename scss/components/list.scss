/// <reference path="../references" />

@mixin list-variant($background) {
    background-color: $background;
    @include color-yiq($background);
}

ul.list {
    list-style-type: none;

    li {
        position: relative;
        padding-left: $list-bullet-width + $spacer;

        &:before {
            content: '';
            position: absolute;
            top: #{$component-line-height / 2}rem;
            left: 0;
            transform: translateY(-50%);
            width: $list-bullet-width;
            height: $list-bullet-width;
            border-radius: 50%;
            background-color: currentColor;
        }

        & + li {
            margin-top: $spacer / 2;
        }
    }

    ul {
        margin-top: $spacer / 2;
        list-style-type: none;
    }
}

ol.list {
    counter-reset: li;
    list-style-type: none;

    @each $color, $value in $theme-colors {
        &.theme-#{$color} li > *:not(ol):before {
            @include list-variant($value);
        }
    }

    ol {
        list-style-type: none;
        counter-reset: li;
        margin-left: $list-number-width + ($spacer / 2);
    }

    li > *:not(ol) {
        position: relative;
        display: block;
        line-height: $component-line-height;
        background-color: $list-background-color;
        @include color-yiq($list-background-color);
        margin: ($spacer / 2) 0 ($spacer / 2) ($list-number-width + ($spacer / 2));
        padding: $padding-y $padding-x;

        &:before {
            content: counter(li);
            position: absolute;
            top: 0;
            left: -($list-number-width + ($spacer / 2));
            width: $list-number-width;
            height: $list-number-width;
            line-height: $list-number-width;
            counter-increment: li;
            text-align: center;
            font-weight: bold;
            background-color: $list-number-background-color;
            @include color-yiq($list-number-background-color);
        }
    }

    li > a {
        &:after {
            content: '';
            position: absolute;
            top: $list-number-width / 2;
            left: -$spacer;
            border: ($spacer / 2) solid transparent;
            transform: translateY(-50%);
            transition: all $transition-time $transition-timing;
        }
    }
}
