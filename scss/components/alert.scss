/// <reference path="../references" />

@mixin layoutr-alert {
    .alert {
        font-size: $font-size;
        border-radius: $component-border-radius;
        @include flex-display();
        @include align-items(flex-start);
        overflow: hidden;

        $value: $light;
        @include theme-element-soft($value, true, false, false, true);

        @each $color, $value in $theme-colors {
            &.theme-#{$color} {
                @include theme-element-soft($value, true, false, false, true);

                .close {
                    html.desktop &:focus,
                    html.desktop &:hover {
                        @include theme-element-soft-darken($value, false);
                    }
                }
            }
        }

        &.same > * {
            padding: $padding-x;
        }

        &:not(.same) > * {
            padding: $padding-y $padding-x;
        }

        > * {
            min-height: $line-height + ($padding-y * 2);
            flex-grow: 1;
            width: 100%;
        }

        > .close {
            @include flex-center;
            width: $line-height + ($padding-y * 2);
            height: $line-height + ($padding-y * 2);
            background-color: transparent;
            flex-shrink: 0;

            > svg {
                width: $font-size;
                height: $font-size;
                flex-shrink: 0;
            }

            html.desktop &:focus,
            html.desktop &:hover {
                @include theme-element-soft-darken($value, false);
            }
        }
    }
}