/// <reference path="../../references" />

@mixin validation-variant($background, $border, $color) {
    $background-light: theme-color-level($background, -10);
    $background-dark: theme-color-level($background, -4);
    input[type=text],
    input[type=password],
    input[type=email],
    .dropdown > div {
        color: $color;
        fill: $color;
        background-color: $background-light;
        border-color: $border;

        .focus,
        &:focus {
            @include box-shadow($box-shadow, 0 0 0 $btn-focus-box-shadow-width $border);
        }
    }

    input[type=checkbox],
    input[type=radio] {

        & + label > i {
            border-color: $border;
            background-color: $background-light;
        }

        &:checked + label > i {
            background-color: $background-dark;
        }
    }

    .dropdown.open {
        > div,
        > ul {
            @include box-shadow($box-shadow, 0 0 0 $btn-focus-box-shadow-width $border);
        }
    }
}

.form-group,
.form-group > div,
.form-group > div > .input-group {
    @include flex-display;
    @include flex-wrap(wrap);
    @include align-items(flex-start);
    flex-grow: 1;
}

.form-group {

    > label {
        padding-right: $spacer;
        width: $form-label-width;
        line-height: $line-height + ($padding-y * 2);
    }

    input[type=text],
    input[type=password],
    input[type=email] {
    padding: $padding-y $padding-x;
    min-height: $line-height + ($padding-y * 2);
    @include border-radius($component-border-radius);
    border: $component-border;
    z-index: $component-z-index;
        width: 100%;
        @include box-shadow($input-box-shadow);

        &:focus {
            @include box-shadow($input-focus-box-shadow);
        }
    }

    > div {
        min-width: $form-input-min-width;
        width: calc(100% - #{$form-label-width});
    }

    &.theme-danger {
        em {
            color: theme-color("danger");
            margin: ($spacer / 2) 0 $spacer 0;
            width: 100%;
        }
    }

    @each $color, $value in $theme-validation-colors {
        &.theme-#{$color} {
            @include validation-variant($value, theme-color-level($value, -9), theme-color-level($value, 8));
        }
    }
}
