/// <reference path="../../references" />

@mixin button-variant($background, $border, $active-background: darken($background, 7.5%)) {
    @include color-yiq($background);
    background-color: $background;
    @include box-shadow($btn-box-shadow);

    &:hover {
        @include color-yiq($active-background);
        background-color: $active-background;
    }

    &:focus,
    &.focus {
        box-shadow: $btn-box-shadow, 0 0 0 3px $border;
        z-index: 1;
    }
}

.btn-group {
    @include flex-display;
    @include flex-wrap(wrap);


    &.expand > .btn {
        flex-grow: 1;
    }

    > .btn {
        @include border-radius(0);
    }
}

.btn {
    @include flex-display;
    @include align-items(center);
    @include noselect;
    font-size: $font-size;
    padding: $padding-y $padding-x;
    min-height: $line-height + ($padding-y * 2);
    @include border-radius($component-border-radius);
    text-decoration: none;
    background-color: transparent;
    cursor: pointer;

    &:not(.align-left):not(.align-right) {
        @include justify-content(center);
    }

    &.align-right {
        @include justify-content(flex-end);
    }

    > * {
        cursor: pointer;
    }

    > svg + label,
    > label + svg {
        margin-left: $spacer / 2;
    }

    > svg {
        width: $font-size;
        height: $font-size;
        flex-shrink: 0;
    }
}


@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @include button-variant($value, theme-color-level($color, -9));
    }
}

.btn-link {
    color: $link-color;
    text-decoration: $link-decoration;

    &:hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
    }
}
