/// <reference path="../../references" />

@mixin button-variant($background, $border) {
    @include color-yiq($background);
    background-color: $background;
    @include box-shadow($box-shadow);

    &:focus,
    &.focus {
        @include box-shadow($box-shadow, 0 0 0 $btn-focus-box-shadow-width $border);
        z-index: $component-focus-z-index;
    }
}

.group {
    @include flex-display;
    @include flex-wrap(wrap);


    &.expand > .btn {
        flex-grow: 1;
    }

    > .btn {
        @include border-radius(0);
    }
}

.btn {
    @include flex-display;
    @include align-items(center);
    @include noselect;
    font-size: $font-size;
    padding: $padding-y $padding-x;
    min-height: $line-height + ($padding-y * 2);
    @include border-radius($component-border-radius);
    text-decoration: none;
    background-color: transparent;
    cursor: pointer;
    line-height: $component-line-height;
    z-index: $component-z-index;

    &:not(.align-left):not(.align-right) {
        @include justify-content(center);
    }

    &.align-right {
        @include justify-content(flex-end);
    }

    > * {
        cursor: pointer;
    }

    > .icon + label,
    > svg + label,
    > label + .icon,
    > label + svg {
        margin-left: $spacer / 2;
    }

    > .icon,
    > svg {
        width: $font-size;
        height: $font-size;
        flex-shrink: 0;
    }

    $value: theme-color("primary");
    $active-background: darken($value, 7.5%);
    @include button-variant($value, theme-color-level($value, -9));



    @each $color, $value in $theme-colors {
        &.theme-#{$color} {
            @include button-variant($value, theme-color-level($value, -9));
        }
    }
    // these icons should be replaced with svg for production
    // since svg will change color based on btn background-color
    $icon-bg: white;
    $icon-line-size: $font-size / 3;

    > .icon {
        position: relative;

        &.center,
        &.corner {
            @include border-radius($font-size / 4);
            overflow: hidden;
        }

        &.corner:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            border-style: solid;
        }

        &.top-left:before {
            border-width: 0 0 $font-size $font-size;
            border-color: transparent transparent transparent $icon-bg;
        }

        &.top-right:before {
            border-width: 0 $font-size $font-size 0;
            border-color: transparent $icon-bg transparent transparent;
        }

        &.bottom-left:before {
            border-width: 0 $font-size $font-size 0;
            border-color: transparent transparent $icon-bg transparent;
        }

        &.bottom-right:before {
            border-width: $font-size $font-size 0 0;
            border-color: transparent $icon-bg transparent transparent;
        }

        &.line:before {
            content: '';
            position: absolute;
            background-color: $icon-bg;
            @include border-radius($icon-line-size / 2);
        }

        &.top:before {
            height: $icon-line-size;
            top: 0;
            left: 0;
            right: 0;
        }

        &.bottom:before {
            height: $icon-line-size;
            bottom: 0;
            left: 0;
            right: 0;
        }

        &.left:before {
            width: $icon-line-size;
            top: 0;
            bottom: 0;
            left: 0;
        }

        &.right:before {
            width: $icon-line-size;
            top: 0;
            bottom: 0;
            right: 0;
        }

        &.center {
            background-color: $icon-bg;
        }
    }
}

.theme-link {
    color: $link-color;
    text-decoration: $link-decoration;
    background-color: transparent !important;

    &:focus,
    &.focus {
        @include box-shadow(none);
    }
}
