/// <reference path="../references" />

@mixin validation-variant($background, $border, $color) {
    $background-light: theme-soft-background-color($background);
    $background-dark: theme-color-level($background, -4);

    textarea,
    input[type=text],
    input[type=search],
    input[type=password],
    input[type=email],
    div.dropdown > div {
        color: $color;
        fill: $color;
        background: theme-gradient-vertical($background-light);
        border-color: $border;

        &:focus {
            box-shadow: $box-shadow, 0 0 0 $component-focus-box-shadow-width $border;
        }
    }

    .radio input,
    .checkbox input,
    .switch input {

        & + label > i {
            background: theme-gradient-vertical($background-light);
        }

        &:not(:checked) + label > i {
            border-color: $background-light;
        }

        &:checked + label > i {
            border-color: $background-dark;
            background: theme-gradient-vertical($background-dark);
        }

        html.desktop & + label:focus > i {
            box-shadow: $box-shadow, 0 0 0 $component-focus-box-shadow-width $border;
        }
    }

    div.dropdown.open {
        > div,
        > ul {
            box-shadow: $box-shadow, 0 0 0 $component-focus-box-shadow-width $border;
        }
    }

    > div > .input-group > .input-group-addon {
        @include theme-element($border, false);
        border-color: $border;
        fill: $color;
    }

    html.desktop & .dropdown > .btn:hover {
        @include theme-element-soft-darken($background);
    }
}

@mixin layoutr-form {
    .form-group,
    .form-group > div,
    .input-group {
        display: flex;
        flex-wrap: wrap;
        flex-grow: 1;
    }

    .form-group,
    .form-group > div {
        align-items: flex-start;
    }

    .form-group,
    .input-group {
        textarea {
            resize: none; /* Safari */
            resize: vertical; /* Chrome */
            min-height: ($line-height * 5) + ($padding-y * 2);
            line-height: $line-height;
        }

        input[type=text],
        input[type=search],
        input[type=password],
        input[type=email] {
            min-height: $line-height + ($padding-y * 2) + ($component-border-width * 2);
        }

        textarea,
        input[type=text],
        input[type=search],
        input[type=password],
        input[type=email] {
            padding: $padding-y $padding-x;
            border-radius: $component-border-radius;
            border: $component-border;
            z-index: $component-z-index;
            box-shadow: $input-box-shadow;
            width: 100%;
            font-size: $font-size;
            -webkit-appearance: none;
            @include theme-element($white, false);

            &:focus {
                @include focus;
            }
        }
    }

    .form-group {
        > .control-label {
            padding-right: $spacer;
            width: $form-label-width;
            line-height: $line-height + ($padding-y * 2);

            &.required:after {
                content: '*';
                color: $danger;
                margin-left: $spacer / 3;
            }
        }



        > div {
            min-width: $form-input-min-width;
            width: calc(100% - #{$form-label-width});
        }

        &.theme-danger em {
            color: $danger;
            margin: ($spacer / 2) 0 $spacer 0;
            width: 100%;
        }

        @each $color, $value in $theme-validation-colors {
            &.theme-#{$color} {
                @include validation-variant($value, theme-soft-border-color($value), theme-soft-color($value));
            }
        }
    }

    .input-group {
        position: relative;
        width: 100%;

        > .input-group-addon {
            position: absolute;
            top: $component-border-width;
            bottom: $component-border-width;
            display: flex;
            align-items: center;
            z-index: $input-group-addon;
            padding: 0 $padding-x;
            @include theme-element-soft($light, false);
            pointer-events: none;

            &:first-child {
                left: $component-border-width;
                border-top-left-radius: $component-border-radius - ($component-border-width * 2);
                border-bottom-left-radius: $component-border-radius - ($component-border-width * 2);
                border-right: $component-border;
            }

            &:last-child {
                right: $component-border-width;
                border-top-right-radius: $component-border-radius - ($component-border-width * 2);
                border-bottom-right-radius: $component-border-radius - ($component-border-width * 2);
                border-left: $component-border;
            }

            > svg {
                width: $font-size;
                height: $font-size;
                flex-shrink: 0;
                opacity: $opacity-inactive;
            }

            & + .form-control {
                padding-left: ($padding-x * 3) + $font-size;
            }
        }
    }
}
