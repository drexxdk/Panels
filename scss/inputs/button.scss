/// <reference path="../references" />

@mixin button-variant($background) {
    @include color-yiq($background);
    background-color: $background;
    box-shadow: $box-shadow;
    background: theme-gradient($background);
}

.btn {
    @include flex-display;
    @include align-items(center);
    @include noselect;
    font-size: $font-size;
    padding: $padding-y $padding-x;
    border-radius: $component-border-radius;
    text-decoration: none;
    background-color: transparent;
    cursor: pointer;
    line-height: $component-line-height;
    z-index: $component-z-index;

    &:not(.align-left):not(.align-right) {
        @include justify-content(center);
    }

    &.align-right {
        @include justify-content(flex-end);
    }

    > * {
        cursor: pointer;
    }

    > i + span,
    > svg + span,
    > span + i,
    > span + svg,
    > i + label,
    > svg + label,
    > label + i,
    > label + svg {
        margin-left: $spacer / 2;
    }

    > i,
    > svg {
        margin: #{(($component-line-height * $font-size) - $font-size) / 2} 0;
        width: $font-size;
        height: $font-size;
        flex-shrink: 0;
    }

    @each $color, $value in $theme-colors {
        &.theme-#{$color} {
            @include button-variant($value);
        }
    }

    $value: theme-color("primary");
    @include button-variant($value);

    &:focus {
        @include focus;
    }
}

.theme-link {
    color: $link-color;
    text-decoration: $link-decoration;
    background: transparent !important;
}
