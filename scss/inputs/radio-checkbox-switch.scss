/// <reference path="../references" />

@mixin layoutr-radio-checkbox-switch {
    .checkboxes,
    .radioboxes,
    .switches {
        padding-top: $spacer-base * 2;
        @extend .flex;
        @extend .flex.column;
        @extend .flex.wrap;
        @extend .flex.gap-2;
    }

    .radio,
    .checkbox,
    .switch {
        position: relative;
        line-height: $line-height;
        user-select: none;

        > input {
            @include hidden;

            &:checked + label > i {
                @include theme-element($primary);
            }

            & + label:focus > i {
                @include focus;
            }
        }

        > label {
            display: flex;
            align-items: center;
            font-size: $font-size;
            z-index: $component-z-index;
            cursor: pointer;
            max-width: 100%;

            > span {
                max-width: 100%;
                overflow: auto;
            }

            > i {
                box-shadow: $box-shadow;
            }
        }
    }

    .radio,
    .checkbox {
        > label > i {
            display: block;
            width: $font-size;
            height: $font-size;
            border: $component-border;
            margin-right: ($spacer / 2);
            position: relative;
            overflow: hidden;
            background-color: $white;
            flex-shrink: 0;
        }
    }

    .radio {
        > label > i {
            border-radius: 50%;
        }

        > input:checked + label > i {
            border-width: $component-border-width * 2;

            &:before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, - 50%);
                border-radius: 50%;
                height: $font-size - ($component-border-width * 4);
                width: $font-size - ($component-border-width * 4);
                border: ($component-border-width * 2) solid currentColor;
            }
        }
    }

    .checkbox {
        > input:not(:checked) + label > i > svg {
            display: none;
        }

        > input:checked + label > i {
            padding: rem(2px);

            > svg {
                width: 100%;
                height: 100%;
                z-index: 1;
                position: relative;
            }
        }
    }

    .switch {
        &.round > label > i {
            border-radius: $font-size - ($component-border-width * 2) / 2;

            &:before {
                border-radius: 50%;
            }
        }

        > input:checked + label > i:before {
            transform: translateX($font-size);
        }

        > label > i {
            width: $font-size * 2;
            height: $font-size;
            @include theme-element($component-border-color);
            position: relative;
            margin-right: ($spacer / 2);

            &:before {
                position: absolute;
                content: "";
                height: $font-size - ($component-border-width * 2);
                width: $font-size - ($component-border-width * 2);
                top: 0;
                bottom: 0;
                left: 0;
                background-color: white;
                @include transition(transform);
            }
        }
    }
}
