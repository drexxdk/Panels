/// <reference path="../references" />

.radio,
.checkbox,
.switch {
    position: relative;
    padding: $padding-y $padding-x $padding-y 0;
    line-height: $line-height;
    @include noselect;

    > input {
        position: absolute;
        top: 0;
        left: 0;
        visibility: hidden;
        opacity: 0;
        font-size: 0;
        z-index: -1;

        $background: theme-color("primary");

        &:checked {
            & + label > i {
                border-color: $background;
                background-color: theme-color("primary");
            }
        }

        &.focus + label > i {
            box-shadow: $box-shadow, 0 0 0 $btn-focus-box-shadow-width theme-soft-border-color($background);
            z-index: $component-focus-z-index;
        }
    }

    > label {
        @include flex-display;
        @include align-items(center);
        font-size: $font-size;
        z-index: $component-z-index;
        cursor: pointer;

        > i {
            box-shadow: $box-shadow;
        }
    }
}

.radio,
.checkbox {
    > label > i {
        display: block;
        width: $font-size;
        height: $font-size;
        border: $component-border;
        margin-right: ($spacer / 2);
        position: relative;
        overflow: hidden;
        background-color: white;
        flex-shrink: 0;
    }
}

.radio {
    > label > i,
    > label > i:before {
        border-radius: 50%;
    }
}

.checkbox {

    > label > i > svg {
        display: none;
    }

    > input:checked + label > i {
        padding: rem(2px);

        > svg {
            display: block;
            width: 100%;
            height: 100%;
            z-index: 1;
            position: relative;
            fill: $white;
        }
    }
}

.switch {
    &.round {
        > label > i {
            border-radius: $font-size - ($component-border-width * 2) / 2;

            &:before {
                border-radius: 50%;
            }
        }
    }

    > input:checked + label > i:before {
        transform: translateX($font-size);
    }

    > label {

        > i {
            width: $font-size * 2;
            height: $font-size;
            background-color: $component-border-color;
            transform: transition(.4s);
            position: relative;
            margin-right: ($spacer / 2);
            border: $component-border-width solid $component-border-color;

            &:before {
                position: absolute;
                content: "";
                height: $font-size - ($component-border-width * 2);
                width: $font-size - ($component-border-width * 2);
                top: 0;
                bottom: 0;
                left: 0;
                background-color: white;
                transform: transition(.4s);
            }
        }
    }
}
