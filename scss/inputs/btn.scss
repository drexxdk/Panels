/// <reference path="../references" />

@mixin layoutr-btn {
    .btn {
        display: flex;
        align-items: center;
        user-select: none;
        font-size: $font-size;
        padding: $padding-y $padding-x;
        border-radius: $component-border-radius;
        text-decoration: none;
        background-color: transparent;
        cursor: pointer;
        line-height: $component-line-height;
        z-index: $component-z-index;
        box-shadow: $box-shadow;

        &.square {
            padding: $padding-y;
        }

        &.circle {
            border-radius: 50%;


            &.small {
                > i,
                > svg {
                    margin: 0;
                }
            }

            &:not(.small) {
                > i,
                > svg {
                    margin: #{(($component-line-height * $font-size) - $font-size) / 2};
                }
            }
        }

        > span {
            max-width: 100%;
        }

        &:not(.align-left):not(.align-right) {
            justify-content: center;
        }

        &.align-right {
            justify-content: flex-end;
        }

        > * {
            cursor: pointer;
        }

        > i + span,
        > svg + span,
        > span + i,
        > span + svg,
        > i + label,
        > svg + label,
        > label + i,
        > label + svg {
            margin-left: $spacer / 2;
        }

        > i,
        > svg {
            margin: #{(($component-line-height * $font-size) - $font-size) / 2} 0;
            width: $font-size;
            height: $font-size;
            flex-shrink: 0;
        }

        $default: $light;

        @include theme-element($default, true);

        html.desktop &:hover {
            @include theme-element-darken($default, true);
        }

        &[type="submit"] {

            $submit: $primary;

            @include theme-element($submit, true);

            html.desktop &:hover {
                @include theme-element-darken($submit, true);
            }
        }

        &:focus {
            @include focus;
        }

        @each $color, $value in $theme-colors {
            &.theme-#{$color} {
                @include theme-element($value, true);

                html.desktop &:hover {
                    @include theme-element-darken($value, true);
                }
            }
        }
    }

    .theme-link {
        color: $link-color;
        text-decoration: $link-decoration;
        background: transparent !important;
        border: $component-border-width solid $component-border-color !important;

        html.desktop &:hover {
            color: $link-hover-color;
            text-decoration: $link-hover-decoration;
        }
    }
}
