/// <reference path="../references" />

@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

@function rem($size) {
    $value: strip-unit($size) / $rem-difference;
    @return $value * 1rem;
}

@function px($size) {
    $value: strip-unit($size) * $rem-difference;
    @return $value * 1px;
}

@function theme-color($key: "primary") {
    @return map-get($theme-colors, $key);
}

@function theme-color-level($color, $level: 0) {
    $color-base: if($level > 0, #000, #fff);

    @if $level < 0 {
        // Lighter values need a quick double negative for the Sass math to work
        $mix: mix($color-base, $color, $level * -1 * $theme-color-interval);

        @if lightness($mix) > 95% {
            @return $color;
        }

        @return $mix;
    }
    @else {
        @return mix($color-base, $color, $level * $theme-color-interval);
    }
}

@function theme-soft-background-color($value) {
    @return theme-color-level($value, -10)
}

@function theme-soft-border-color($value) {
    @return theme-color-level($value, -8)
}

@function theme-soft-color($value) {
    @return theme-color-level($value, 8)
}

@function theme-gradient($value) {
    @return $value linear-gradient(180deg, mix($body-background-color, $value, 15%), $value) repeat-x;
}