/// <reference path="../references" />

@function theme-color-level($color, $level: 0) {
    $color-base: if($level > 0, #000, #fff);

    @if $level < 0 {
        // Lighter values need a quick double negative for the Sass math to work
        $mix: mix($color-base, $color, $level * -1 * $theme-color-interval);

        @if lightness($mix) > 95% {
            @return $color;
        }

        @return $mix;
    }
    @else {
        @return mix($color-base, $color, $level * $theme-color-interval);
    }
}

@function theme-soft-background-color($value) {
    @return theme-color-level($value, -10)
}

@function theme-soft-border-color($value) {
    @return theme-color-level($value, -8)
}

@function theme-soft-color($value) {
    @return theme-color-level($value, 8)
}

@function theme-gradient($value) {
    @return $value linear-gradient(180deg, mix($body-background-color, $value, 15%), $value) repeat-x;
}

@function yiq($color) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);

    @return (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
}

@function luma($color) {
    $rgba: red($color), green($color), blue($color);
    $rgba2: ();

    @for $i from 1 through 3 {
        $rgb: nth($rgba, $i);
        $rgb: $rgb / 255;
        $rgb: if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));
        $rgba2: append($rgba2, $rgb);
    }

    @return (.2126 * nth($rgba2, 1) + .7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3))*100;
}

@function contrast_ratio($color1, $color2) {
    $luma1: luma($color1) + 5;
    $luma2: luma($color2) + 5;
    $ratio: $luma1 / $luma2;

    @if $luma1 < $luma2 {
        $ratio: 1 / $ratio;
    }

    @return $ratio;
}

@function text-contrast($color, $bgcolor: $color) {
    $threshold: 4.5; // 4.5 = WCAG AA,7= WCAG AAA
    $default-ratio: contrast_ratio($bgcolor, $color);

    @if $default-ratio > $threshold {
        @return $color;
    }

    $list: 10 20 30 40 50 60 70 80 90 100;

    @each $percent in $list {
        $lighter: lighten($color, $percent);
        $darker: darken($color, $percent);
        $darker-ratio: contrast_ratio($darker, $bgcolor);
        $lighter-ratio: contrast_ratio($lighter, $bgcolor);

        @if $lighter-ratio > $darker-ratio and $lighter-ratio > $threshold {
            @return $lighter;
        }

        @if $darker-ratio > $lighter-ratio and $darker-ratio > $threshold {
            @return $darker;
        }
    }

    @return if(lightness($color) < 51, $color-light, $color-dark)
}

@function background-percentage($background, $percentage) {
    @if yiq($background) >= 150 {
        // dark
        @return darken($background, $percentage);
    }
    @else {
        // light
        @return lighten($background, $percentage);
    }
}
