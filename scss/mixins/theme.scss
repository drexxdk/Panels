/// <reference path="../references" />

@function theme-border($value) {
    @return theme-color-level($value, 1);
}

@mixin theme-color($value) {
    @include color-yiq($value);
}

@mixin theme-element($backgroundColor, $includeBorder: false, $colorBasedOnBackground: false, $horizontalGradient: false) {
    @include color-yiq($backgroundColor, $colorBasedOnBackground);

    @if $horizontalGradient {
        background: theme-gradient-horizontal($backgroundColor);
    }
    @else {
        background: theme-gradient-vertical($backgroundColor);
    }

    @if $includeBorder {
        border: $component-border-width solid theme-border($backgroundColor);
    }
}

@function get-theme-element-darken($background) {
    @return theme-darken($background);
}

@function get-theme-element-soft($background) {
    @return theme-soft($background);
}

@function get-theme-element-soft-darken($background) {
    @return theme-darken(theme-soft($background));
}

@mixin theme-element-darken($backgroundColor, $includeBorder: false, $colorBasedOnBackground: false, $horizontalGradient: false) {
    @include theme-element(theme-darken($backgroundColor), $includeBorder, $colorBasedOnBackground, $horizontalGradient);
}

@mixin theme-element-soft($backgroundColor, $includeBorder: false, $colorBasedOnBackground: false, $horizontalGradient: false) {
    @include theme-element(get-theme-element-soft($backgroundColor), $includeBorder, $colorBasedOnBackground, $horizontalGradient);
}

@mixin theme-element-soft-darken($backgroundColor, $includeBorder: false, $colorBasedOnBackground: false, $horizontalGradient: false) {
    @include theme-element(get-theme-element-soft-darken($backgroundColor), $includeBorder, $colorBasedOnBackground, $horizontalGradient);
}
