/// <reference path="../references" />

@mixin layoutr-drag-and-drop {
    .assignment.drag-and-drop {
        .header {
            @include theme-element($secondary);
            position: relative;

            .title {
                position: absolute;
                top: 0;
                left: 0;
                right: $header-height-content;
                @include ellipsis;
            }

            .place {
                margin-left: auto;
                pointer-events: none;
                opacity: 0;
            }
        }

        .box {
            min-width: rem(150px);
            border: $component-border;
            border-radius: $component-border-radius;
            overflow: hidden;
        }

        .content {
            background-color: $white;

            .container {
                padding: $spacer / 2;
                min-height: rem(66px);
            }
        }

        &.validated {
            .item > label > i {
                display: none;
            }

            .from,
            .to {
                pointer-events: none;
            }
        }

        html.desktop & {
            &:not(.moving) .place {
                visibility: hidden;
            }

            &.moving .box:hover .place,
            &.moving .place:focus {
                pointer-events: all;
                opacity: 1;
            }

            .item:not(.sortable-ghost) label:hover {
                @include theme-element-soft($secondary);
            }
        }

        html.mobile &,
        html.tablet & {
            &.moving .place {
                pointer-events: all;
                opacity: 1;
            }
        }

        .item {
            > label {
                @include theme-element($light, true);
                padding: $padding-y $padding-x;
            }

            &.valid > label {
                @include theme-element-soft($success, true);
            }

            &.invalid > label {
                @include theme-element-soft($danger, true);
            }
        }

        .to {
            .box {
                display: flex;
                flex-direction: column;

                .content {
                    flex-grow: 1;

                    > .container {
                        height: 100%;
                    }
                }
            }

            .item {
                position: relative;

                &:before {
                    content: '';
                    display: block;
                    width: 100%;
                    height: rem(42px);
                }

                > label {
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;

                    > span {
                        @include ellipsis;
                    }
                }
            }
        }
    }

    .assignment.drag-and-drop .item.sortable-ghost label,
    .drag-and-drop-sortable-chosen label {
        @include theme-element($dark, true);
    }

    .drag-and-drop-sortable-chosen {
        body > & {
            margin: $spacer / 2;
        }

        label {
            padding: $padding-y $padding-x;

            i {
                box-shadow: none !important;
            }
        }
    }
}
