/// <reference path="../references" />

@mixin layoutr-puzzle {
    .assignment.puzzle {

        &[data-state="initial"] {

            .buttons button.give-up {
                display: none;
            }
        }

        &[data-state="start"] {
            .content > div {
                background-image: none !important;
            }

            .buttons button.start {
                display: none;
            }
        }

        &[data-state="correct"] {
            .content {
                pointer-events: none;
            }

            .buttons button.start {
                display: none;
            }
        }

        .content {
            position: relative;
            overflow: auto;
            width: 100%;
            height: 100%;

            > div {
                position: relative;
                width: 100%;
                padding-bottom: 100%;
                background-size: cover;
                background-position: center;

                > .item {
                    display: flex;
                    position: absolute;
                    font-size: 0;
                    cursor: pointer;
                    overflow: hidden;

                    &:not(.movable) {
                        pointer-events: none;
                    }

                    html.desktop &:hover > div {
                        @extend .overlay-dark;
                        position: absolute;
                    }
                    /*border: 2px solid transparent;
                border-radius: 12px;*/
                    /*&:after {
                    content: '';
                    position: absolute;
                    top: 0;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    border: 2px solid black;
                    border-radius: 10px;
                }*/
                    > div {
                        position: absolute;
                        background-size: cover;
                        background-position: center;
                        overflow: hidden;
                        pointer-events: none;
                    }
                }

                > .alert {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                }
            }
        }
    }
}
