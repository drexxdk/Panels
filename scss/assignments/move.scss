/// <reference path="../references" />

.assignment.move {
    .box {
        border: $component-border;
    }

    .container {
        padding: $spacer / 2;
        min-height: rem(66px);
    }

    .place {
        pointer-events: none;
        opacity: 0;
        visibility: hidden;
    }

    html.desktop & {
        &.moving .box:hover .place {
            pointer-events: all;
            opacity: 1;
            visibility: visible;
        }
    }

    html.mobile &,
    html.tablet & {
        &.moving .place {
            pointer-events: all;
            opacity: 1;
            visibility: visible;
        }
    }

    .item {
        > label {
            @include theme-element($light);
            padding: $padding-y $padding-x;
        }
    }
    /*.sortable-drag {
        label {
            background: blue !important;

            i {
                box-shadow: none !important;
            }
        }
    }*/
    .to {
        .item {
            position: relative;

            &:before {
                content: '';
                display: block;
                width: 100%;
                height: rem(42px);
            }

            > label {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
            }
        }
    }
}

.item.checkbox.sortable-chosen {
    &.sortable-fallback {
        margin: $flex-space-base * 2;
    }

    label {
        @include theme-element-soft($secondary);
        padding: $padding-y $padding-x;

        i {
            box-shadow: none !important;
        }
    }
}

.item.checkbox.sortable-ghost label {
    @include theme-element-soft($secondary);
}
